# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grafeas_v1/proto/build.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from grafeas.v1.proto import provenance_pb2 as grafeas__v1_dot_proto_dot_provenance__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
    name="grafeas_v1/proto/build.proto",
    package="grafeas.v1",
    syntax="proto3",
    serialized_options=_b(
        "\n\rio.grafeas.v1P\001Z8google.golang.org/genproto/googleapis/grafeas/v1;grafeas\242\002\003GRA"
    ),
    serialized_pb=_b(
        '\n\x1cgrafeas_v1/proto/build.proto\x12\ngrafeas.v1\x1a!grafeas_v1/proto/provenance.proto"S\n\tBuildNote\x12\x17\n\x0f\x62uilder_version\x18\x01 \x01(\t\x12-\n\tsignature\x18\x02 \x01(\x0b\x32\x1a.grafeas.v1.BuildSignature"\xc7\x01\n\x0e\x42uildSignature\x12\x12\n\npublic_key\x18\x01 \x01(\t\x12\x11\n\tsignature\x18\x02 \x01(\x0c\x12\x0e\n\x06key_id\x18\x03 \x01(\t\x12\x34\n\x08key_type\x18\x04 \x01(\x0e\x32".grafeas.v1.BuildSignature.KeyType"H\n\x07KeyType\x12\x18\n\x14KEY_TYPE_UNSPECIFIED\x10\x00\x12\x15\n\x11PGP_ASCII_ARMORED\x10\x01\x12\x0c\n\x08PKIX_PEM\x10\x02"\\\n\x0f\x42uildOccurrence\x12/\n\nprovenance\x18\x01 \x01(\x0b\x32\x1b.grafeas.v1.BuildProvenance\x12\x18\n\x10provenance_bytes\x18\x02 \x01(\tBQ\n\rio.grafeas.v1P\x01Z8google.golang.org/genproto/googleapis/grafeas/v1;grafeas\xa2\x02\x03GRAb\x06proto3'
    ),
    dependencies=[grafeas__v1_dot_proto_dot_provenance__pb2.DESCRIPTOR],
)


_BUILDSIGNATURE_KEYTYPE = _descriptor.EnumDescriptor(
    name="KeyType",
    full_name="grafeas.v1.BuildSignature.KeyType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="KEY_TYPE_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="PGP_ASCII_ARMORED",
            index=1,
            number=1,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="PKIX_PEM", index=2, number=2, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=292,
    serialized_end=364,
)
_sym_db.RegisterEnumDescriptor(_BUILDSIGNATURE_KEYTYPE)


_BUILDNOTE = _descriptor.Descriptor(
    name="BuildNote",
    full_name="grafeas.v1.BuildNote",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="builder_version",
            full_name="grafeas.v1.BuildNote.builder_version",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="signature",
            full_name="grafeas.v1.BuildNote.signature",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=79,
    serialized_end=162,
)


_BUILDSIGNATURE = _descriptor.Descriptor(
    name="BuildSignature",
    full_name="grafeas.v1.BuildSignature",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="public_key",
            full_name="grafeas.v1.BuildSignature.public_key",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="signature",
            full_name="grafeas.v1.BuildSignature.signature",
            index=1,
            number=2,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b(""),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="key_id",
            full_name="grafeas.v1.BuildSignature.key_id",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="key_type",
            full_name="grafeas.v1.BuildSignature.key_type",
            index=3,
            number=4,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_BUILDSIGNATURE_KEYTYPE],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=165,
    serialized_end=364,
)


_BUILDOCCURRENCE = _descriptor.Descriptor(
    name="BuildOccurrence",
    full_name="grafeas.v1.BuildOccurrence",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="provenance",
            full_name="grafeas.v1.BuildOccurrence.provenance",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="provenance_bytes",
            full_name="grafeas.v1.BuildOccurrence.provenance_bytes",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=366,
    serialized_end=458,
)

_BUILDNOTE.fields_by_name["signature"].message_type = _BUILDSIGNATURE
_BUILDSIGNATURE.fields_by_name["key_type"].enum_type = _BUILDSIGNATURE_KEYTYPE
_BUILDSIGNATURE_KEYTYPE.containing_type = _BUILDSIGNATURE
_BUILDOCCURRENCE.fields_by_name[
    "provenance"
].message_type = grafeas__v1_dot_proto_dot_provenance__pb2._BUILDPROVENANCE
DESCRIPTOR.message_types_by_name["BuildNote"] = _BUILDNOTE
DESCRIPTOR.message_types_by_name["BuildSignature"] = _BUILDSIGNATURE
DESCRIPTOR.message_types_by_name["BuildOccurrence"] = _BUILDOCCURRENCE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BuildNote = _reflection.GeneratedProtocolMessageType(
    "BuildNote",
    (_message.Message,),
    dict(
        DESCRIPTOR=_BUILDNOTE,
        __module__="grafeas_v1.proto.build_pb2",
        __doc__="""Note holding the version of the provider's builder and the signature of
  the provenance message in the build details occurrence.
  
  
  Attributes:
      builder_version:
          Required. Immutable. Version of the builder which produced
          this build.
      signature:
          Signature of the build in occurrences pointing to this build
          note containing build details.
  """,
        # @@protoc_insertion_point(class_scope:grafeas.v1.BuildNote)
    ),
)
_sym_db.RegisterMessage(BuildNote)

BuildSignature = _reflection.GeneratedProtocolMessageType(
    "BuildSignature",
    (_message.Message,),
    dict(
        DESCRIPTOR=_BUILDSIGNATURE,
        __module__="grafeas_v1.proto.build_pb2",
        __doc__="""Message encapsulating the signature of the verified build.
  
  
  Attributes:
      public_key:
          Public key of the builder which can be used to verify that the
          related findings are valid and unchanged. If ``key_type`` is
          empty, this defaults to PEM encoded public keys.  This field
          may be empty if ``key_id`` references an external key.  For
          Cloud Build based signatures, this is a PEM encoded public
          key. To verify the Cloud Build signature, place the contents
          of this field into a file (public.pem). The signature field is
          base64-decoded into its binary representation in
          signature.bin, and the provenance bytes from ``BuildDetails``
          are base64-decoded into a binary representation in signed.bin.
          OpenSSL can then verify the signature: ``openssl sha256
          -verify public.pem -signature signature.bin signed.bin``
      signature:
          Required. Signature of the related ``BuildProvenance``. In
          JSON, this is base-64 encoded.
      key_id:
          An ID for the key used to sign. This could be either an ID for
          the key stored in ``public_key`` (such as the ID or
          fingerprint for a PGP key, or the CN for a cert), or a
          reference to an external key (such as a reference to a key in
          Cloud Key Management Service).
      key_type:
          The type of the key, either stored in ``public_key`` or
          referenced in ``key_id``.
  """,
        # @@protoc_insertion_point(class_scope:grafeas.v1.BuildSignature)
    ),
)
_sym_db.RegisterMessage(BuildSignature)

BuildOccurrence = _reflection.GeneratedProtocolMessageType(
    "BuildOccurrence",
    (_message.Message,),
    dict(
        DESCRIPTOR=_BUILDOCCURRENCE,
        __module__="grafeas_v1.proto.build_pb2",
        __doc__="""Details of a build occurrence.
  
  
  Attributes:
      provenance:
          Required. The actual provenance for the build.
      provenance_bytes:
          Serialized JSON representation of the provenance, used in
          generating the build signature in the corresponding build
          note. After verifying the signature, ``provenance_bytes`` can
          be unmarshalled and compared to the provenance to confirm that
          it is unchanged. A base64-encoded string representation of the
          provenance bytes is used for the signature in order to
          interoperate with openssl which expects this format for
          signature verification.  The serialized form is captured both
          to avoid ambiguity in how the provenance is marshalled to json
          as well to prevent incompatibilities with future changes.
  """,
        # @@protoc_insertion_point(class_scope:grafeas.v1.BuildOccurrence)
    ),
)
_sym_db.RegisterMessage(BuildOccurrence)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
