# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.cloud.recaptchaenterprise_v1beta1.proto import (
    recaptchaenterprise_pb2 as google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2,
)


class RecaptchaEnterpriseServiceV1Beta1Stub(object):
    """Service to determine the likelihood an event is legitimate.
  """

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.CreateAssessment = channel.unary_unary(
            "/google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterpriseServiceV1Beta1/CreateAssessment",
            request_serializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.CreateAssessmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.Assessment.FromString,
        )
        self.AnnotateAssessment = channel.unary_unary(
            "/google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterpriseServiceV1Beta1/AnnotateAssessment",
            request_serializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.AnnotateAssessmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.AnnotateAssessmentResponse.FromString,
        )


class RecaptchaEnterpriseServiceV1Beta1Servicer(object):
    """Service to determine the likelihood an event is legitimate.
  """

    def CreateAssessment(self, request, context):
        """Creates an Assessment of the likelihood an event is legitimate.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AnnotateAssessment(self, request, context):
        """Annotates a previously created Assessment to provide additional information
    on whether the event turned out to be authentic or fradulent.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_RecaptchaEnterpriseServiceV1Beta1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateAssessment": grpc.unary_unary_rpc_method_handler(
            servicer.CreateAssessment,
            request_deserializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.CreateAssessmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.Assessment.SerializeToString,
        ),
        "AnnotateAssessment": grpc.unary_unary_rpc_method_handler(
            servicer.AnnotateAssessment,
            request_deserializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.AnnotateAssessmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_recaptchaenterprise__v1beta1_dot_proto_dot_recaptchaenterprise__pb2.AnnotateAssessmentResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterpriseServiceV1Beta1",
        rpc_method_handlers,
    )
    server.add_generic_rpc_handlers((generic_handler,))
