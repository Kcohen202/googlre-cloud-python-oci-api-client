# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/recaptchaenterprise_v1beta1/proto/recaptchaenterprise.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
    name="google/cloud/recaptchaenterprise_v1beta1/proto/recaptchaenterprise.proto",
    package="google.cloud.recaptchaenterprise.v1beta1",
    syntax="proto3",
    serialized_options=_b(
        "\n&com.google.recaptchaenterprise.v1beta1B\030RecaptchaEnterpriseProtoP\001Z[google.golang.org/genproto/googleapis/cloud/recaptchaenterprise/v1beta1;recaptchaenterprise\242\002\004GCRE\252\002(Google.Cloud.RecaptchaEnterprise.V1Beta1\312\002(Google\\Cloud\\RecaptchaEnterprise\\V1beta1"
    ),
    serialized_pb=_b(
        '\nHgoogle/cloud/recaptchaenterprise_v1beta1/proto/recaptchaenterprise.proto\x12(google.cloud.recaptchaenterprise.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto"s\n\x17\x43reateAssessmentRequest\x12\x0e\n\x06parent\x18\x01 \x01(\t\x12H\n\nassessment\x18\x02 \x01(\x0b\x32\x34.google.cloud.recaptchaenterprise.v1beta1.Assessment"\xd7\x01\n\x19\x41nnotateAssessmentRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x62\n\nannotation\x18\x02 \x01(\x0e\x32N.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation"H\n\nAnnotation\x12\x1a\n\x16\x41NNOTATION_UNSPECIFIED\x10\x00\x12\x0e\n\nLEGITIMATE\x10\x01\x12\x0e\n\nFRAUDULENT\x10\x02"\x1c\n\x1a\x41nnotateAssessmentResponse"\xc4\x03\n\nAssessment\x12\x0c\n\x04name\x18\x01 \x01(\t\x12>\n\x05\x65vent\x18\x02 \x01(\x0b\x32/.google.cloud.recaptchaenterprise.v1beta1.Event\x12\r\n\x05score\x18\x03 \x01(\x02\x12S\n\x10token_properties\x18\x04 \x01(\x0b\x32\x39.google.cloud.recaptchaenterprise.v1beta1.TokenProperties\x12Z\n\x07reasons\x18\x05 \x03(\x0e\x32I.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason"\xa7\x01\n\x14\x43lassificationReason\x12%\n!CLASSIFICATION_REASON_UNSPECIFIED\x10\x00\x12\x0e\n\nAUTOMATION\x10\x01\x12\x1a\n\x16UNEXPECTED_ENVIRONMENT\x10\x02\x12\x1d\n\x19UNEXPECTED_USAGE_PATTERNS\x10\x04\x12\x1d\n\x19PROVISIONAL_RISK_ANALYSIS\x10\x05"(\n\x05\x45vent\x12\r\n\x05token\x18\x01 \x01(\t\x12\x10\n\x08site_key\x18\x02 \x01(\t"\xe8\x02\n\x0fTokenProperties\x12\r\n\x05valid\x18\x01 \x01(\x08\x12_\n\x0einvalid_reason\x18\x02 \x01(\x0e\x32G.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason\x12/\n\x0b\x63reate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x10\n\x08hostname\x18\x04 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x05 \x01(\t"\x91\x01\n\rInvalidReason\x12\x1e\n\x1aINVALID_REASON_UNSPECIFIED\x10\x00\x12\x1a\n\x16UNKNOWN_INVALID_REASON\x10\x01\x12\r\n\tMALFORMED\x10\x02\x12\x0b\n\x07\x45XPIRED\x10\x03\x12\x08\n\x04\x44UPE\x10\x04\x12\x11\n\rSITE_MISMATCH\x10\x05\x12\x0b\n\x07MISSING\x10\x06\x32\xcf\x03\n!RecaptchaEnterpriseServiceV1Beta1\x12\xc9\x01\n\x10\x43reateAssessment\x12\x41.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest\x1a\x34.google.cloud.recaptchaenterprise.v1beta1.Assessment"<\x82\xd3\xe4\x93\x02\x36"(/v1beta1/{parent=projects/*}/assessments:\nassessment\x12\xdd\x01\n\x12\x41nnotateAssessment\x12\x43.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest\x1a\x44.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse"<\x82\xd3\xe4\x93\x02\x36"1/v1beta1/{name=projects/*/assessments/*}:annotate:\x01*B\xfe\x01\n&com.google.recaptchaenterprise.v1beta1B\x18RecaptchaEnterpriseProtoP\x01Z[google.golang.org/genproto/googleapis/cloud/recaptchaenterprise/v1beta1;recaptchaenterprise\xa2\x02\x04GCRE\xaa\x02(Google.Cloud.RecaptchaEnterprise.V1Beta1\xca\x02(Google\\Cloud\\RecaptchaEnterprise\\V1beta1b\x06proto3'
    ),
    dependencies=[
        google_dot_api_dot_annotations__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,
    ],
)


_ANNOTATEASSESSMENTREQUEST_ANNOTATION = _descriptor.EnumDescriptor(
    name="Annotation",
    full_name="google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ANNOTATION_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="LEGITIMATE", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="FRAUDULENT", index=2, number=2, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=442,
    serialized_end=514,
)
_sym_db.RegisterEnumDescriptor(_ANNOTATEASSESSMENTREQUEST_ANNOTATION)

_ASSESSMENT_CLASSIFICATIONREASON = _descriptor.EnumDescriptor(
    name="ClassificationReason",
    full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="CLASSIFICATION_REASON_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="AUTOMATION", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="UNEXPECTED_ENVIRONMENT",
            index=2,
            number=2,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="UNEXPECTED_USAGE_PATTERNS",
            index=3,
            number=4,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="PROVISIONAL_RISK_ANALYSIS",
            index=4,
            number=5,
            serialized_options=None,
            type=None,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=832,
    serialized_end=999,
)
_sym_db.RegisterEnumDescriptor(_ASSESSMENT_CLASSIFICATIONREASON)

_TOKENPROPERTIES_INVALIDREASON = _descriptor.EnumDescriptor(
    name="InvalidReason",
    full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="INVALID_REASON_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="UNKNOWN_INVALID_REASON",
            index=1,
            number=1,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="MALFORMED", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="EXPIRED", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="DUPE", index=4, number=4, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="SITE_MISMATCH", index=5, number=5, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="MISSING", index=6, number=6, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1259,
    serialized_end=1404,
)
_sym_db.RegisterEnumDescriptor(_TOKENPROPERTIES_INVALIDREASON)


_CREATEASSESSMENTREQUEST = _descriptor.Descriptor(
    name="CreateAssessmentRequest",
    full_name="google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="parent",
            full_name="google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.parent",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="assessment",
            full_name="google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.assessment",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=181,
    serialized_end=296,
)


_ANNOTATEASSESSMENTREQUEST = _descriptor.Descriptor(
    name="AnnotateAssessmentRequest",
    full_name="google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="name",
            full_name="google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.name",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="annotation",
            full_name="google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.annotation",
            index=1,
            number=2,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_ANNOTATEASSESSMENTREQUEST_ANNOTATION],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=299,
    serialized_end=514,
)


_ANNOTATEASSESSMENTRESPONSE = _descriptor.Descriptor(
    name="AnnotateAssessmentResponse",
    full_name="google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=516,
    serialized_end=544,
)


_ASSESSMENT = _descriptor.Descriptor(
    name="Assessment",
    full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="name",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment.name",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="event",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment.event",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="score",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment.score",
            index=2,
            number=3,
            type=2,
            cpp_type=6,
            label=1,
            has_default_value=False,
            default_value=float(0),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="token_properties",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment.token_properties",
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="reasons",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Assessment.reasons",
            index=4,
            number=5,
            type=14,
            cpp_type=8,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_ASSESSMENT_CLASSIFICATIONREASON],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=547,
    serialized_end=999,
)


_EVENT = _descriptor.Descriptor(
    name="Event",
    full_name="google.cloud.recaptchaenterprise.v1beta1.Event",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="token",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Event.token",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="site_key",
            full_name="google.cloud.recaptchaenterprise.v1beta1.Event.site_key",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1001,
    serialized_end=1041,
)


_TOKENPROPERTIES = _descriptor.Descriptor(
    name="TokenProperties",
    full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="valid",
            full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties.valid",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="invalid_reason",
            full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties.invalid_reason",
            index=1,
            number=2,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="create_time",
            full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties.create_time",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="hostname",
            full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties.hostname",
            index=3,
            number=4,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="action",
            full_name="google.cloud.recaptchaenterprise.v1beta1.TokenProperties.action",
            index=4,
            number=5,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_TOKENPROPERTIES_INVALIDREASON],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1044,
    serialized_end=1404,
)

_CREATEASSESSMENTREQUEST.fields_by_name["assessment"].message_type = _ASSESSMENT
_ANNOTATEASSESSMENTREQUEST.fields_by_name[
    "annotation"
].enum_type = _ANNOTATEASSESSMENTREQUEST_ANNOTATION
_ANNOTATEASSESSMENTREQUEST_ANNOTATION.containing_type = _ANNOTATEASSESSMENTREQUEST
_ASSESSMENT.fields_by_name["event"].message_type = _EVENT
_ASSESSMENT.fields_by_name["token_properties"].message_type = _TOKENPROPERTIES
_ASSESSMENT.fields_by_name["reasons"].enum_type = _ASSESSMENT_CLASSIFICATIONREASON
_ASSESSMENT_CLASSIFICATIONREASON.containing_type = _ASSESSMENT
_TOKENPROPERTIES.fields_by_name[
    "invalid_reason"
].enum_type = _TOKENPROPERTIES_INVALIDREASON
_TOKENPROPERTIES.fields_by_name[
    "create_time"
].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_TOKENPROPERTIES_INVALIDREASON.containing_type = _TOKENPROPERTIES
DESCRIPTOR.message_types_by_name["CreateAssessmentRequest"] = _CREATEASSESSMENTREQUEST
DESCRIPTOR.message_types_by_name[
    "AnnotateAssessmentRequest"
] = _ANNOTATEASSESSMENTREQUEST
DESCRIPTOR.message_types_by_name[
    "AnnotateAssessmentResponse"
] = _ANNOTATEASSESSMENTRESPONSE
DESCRIPTOR.message_types_by_name["Assessment"] = _ASSESSMENT
DESCRIPTOR.message_types_by_name["Event"] = _EVENT
DESCRIPTOR.message_types_by_name["TokenProperties"] = _TOKENPROPERTIES
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateAssessmentRequest = _reflection.GeneratedProtocolMessageType(
    "CreateAssessmentRequest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CREATEASSESSMENTREQUEST,
        __module__="google.cloud.recaptchaenterprise_v1beta1.proto.recaptchaenterprise_pb2",
        __doc__="""The create assessment request message.
  
  
  Attributes:
      parent:
          Required. The name of the project in which the assessment will
          be created, in the format "projects/{project\_number}".
      assessment:
          The asessment details.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest)
    ),
)
_sym_db.RegisterMessage(CreateAssessmentRequest)

AnnotateAssessmentRequest = _reflection.GeneratedProtocolMessageType(
    "AnnotateAssessmentRequest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_ANNOTATEASSESSMENTREQUEST,
        __module__="google.cloud.recaptchaenterprise_v1beta1.proto.recaptchaenterprise_pb2",
        __doc__="""The request message to annotate an Assessment.
  
  
  Attributes:
      name:
          Required. The resource name of the Assessment, in the format
          "projects/{project\_number}/assessments/{assessment\_id}".
      annotation:
          The annotation that will be assigned to the Event.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest)
    ),
)
_sym_db.RegisterMessage(AnnotateAssessmentRequest)

AnnotateAssessmentResponse = _reflection.GeneratedProtocolMessageType(
    "AnnotateAssessmentResponse",
    (_message.Message,),
    dict(
        DESCRIPTOR=_ANNOTATEASSESSMENTRESPONSE,
        __module__="google.cloud.recaptchaenterprise_v1beta1.proto.recaptchaenterprise_pb2",
        __doc__="""Empty response for AnnotateAssessment.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse)
    ),
)
_sym_db.RegisterMessage(AnnotateAssessmentResponse)

Assessment = _reflection.GeneratedProtocolMessageType(
    "Assessment",
    (_message.Message,),
    dict(
        DESCRIPTOR=_ASSESSMENT,
        __module__="google.cloud.recaptchaenterprise_v1beta1.proto.recaptchaenterprise_pb2",
        __doc__="""A recaptcha assessment resource.
  
  
  Attributes:
      name:
          Output only. The resource name for the Assessment in the
          format
          "projects/{project\_number}/assessments/{assessment\_id}".
      event:
          The event being assessed.
      score:
          Output only. Legitimate event score from 0.0 to 1.0. (1.0
          means very likely legitimate traffic while 0.0 means very
          likely non-legitimate traffic).
      token_properties:
          Output only. Properties of the provided event token.
      reasons:
          Output only. Reasons contributing to the risk analysis
          verdict.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.recaptchaenterprise.v1beta1.Assessment)
    ),
)
_sym_db.RegisterMessage(Assessment)

Event = _reflection.GeneratedProtocolMessageType(
    "Event",
    (_message.Message,),
    dict(
        DESCRIPTOR=_EVENT,
        __module__="google.cloud.recaptchaenterprise_v1beta1.proto.recaptchaenterprise_pb2",
        __doc__="""
    Attributes:
      token:
          The user response token provided by the reCAPTCHA client-side
          integration on your site.
      site_key:
          The site key that was used to invoke reCAPTCHA on your site
          and generate the token.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.recaptchaenterprise.v1beta1.Event)
    ),
)
_sym_db.RegisterMessage(Event)

TokenProperties = _reflection.GeneratedProtocolMessageType(
    "TokenProperties",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TOKENPROPERTIES,
        __module__="google.cloud.recaptchaenterprise_v1beta1.proto.recaptchaenterprise_pb2",
        __doc__="""
    Attributes:
      valid:
          Output only. Whether the provided user response token is
          valid.
      invalid_reason:
          Output only. Reason associated with the response when valid =
          false.
      create_time:
          Output only. The timestamp corresponding to the generation of
          the token.
      hostname:
          Output only. The hostname of the page on which the token was
          generated.
      action:
          Output only. Action name provided at token generation.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.recaptchaenterprise.v1beta1.TokenProperties)
    ),
)
_sym_db.RegisterMessage(TokenProperties)


DESCRIPTOR._options = None

_RECAPTCHAENTERPRISESERVICEV1BETA1 = _descriptor.ServiceDescriptor(
    name="RecaptchaEnterpriseServiceV1Beta1",
    full_name="google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterpriseServiceV1Beta1",
    file=DESCRIPTOR,
    index=0,
    serialized_options=None,
    serialized_start=1407,
    serialized_end=1870,
    methods=[
        _descriptor.MethodDescriptor(
            name="CreateAssessment",
            full_name="google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterpriseServiceV1Beta1.CreateAssessment",
            index=0,
            containing_service=None,
            input_type=_CREATEASSESSMENTREQUEST,
            output_type=_ASSESSMENT,
            serialized_options=_b(
                '\202\323\344\223\0026"(/v1beta1/{parent=projects/*}/assessments:\nassessment'
            ),
        ),
        _descriptor.MethodDescriptor(
            name="AnnotateAssessment",
            full_name="google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterpriseServiceV1Beta1.AnnotateAssessment",
            index=1,
            containing_service=None,
            input_type=_ANNOTATEASSESSMENTREQUEST,
            output_type=_ANNOTATEASSESSMENTRESPONSE,
            serialized_options=_b(
                '\202\323\344\223\0026"1/v1beta1/{name=projects/*/assessments/*}:annotate:\001*'
            ),
        ),
    ],
)
_sym_db.RegisterServiceDescriptor(_RECAPTCHAENTERPRISESERVICEV1BETA1)

DESCRIPTOR.services_by_name[
    "RecaptchaEnterpriseServiceV1Beta1"
] = _RECAPTCHAENTERPRISESERVICEV1BETA1

# @@protoc_insertion_point(module_scope)
